version: "3"

services:
  # START Netdata
  netdata:
    image: netdata/netdata
    hostname: ${TLD} # set to fqdn of host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - ${VOLUMES_PATH}/netdata:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      VIRTUAL_HOST: netdata.${TLD}
      VIRTUAL_PORT: 19999
      LETSENCRYPT_HOST: netdata.${TLD}
      DOCKER_USER: root
      NETDATA_CLAIM_TOKEN: ${NETDATA_CLAIM_TOKEN}
      NETDATA_CLAIM_URL: https://app.netdata.cloud
    networks:
      - base-network
  # END Netdata
  # START Watchtower
  watchtower:
    image: containrrr/watchtower
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      - WATCHTOWER_NOTIFICATIONS=slack
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${SLACK_WEBHOOK}
      - WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER=watchtower-srv
      - WATCHTOWER_NOTIFICATION_SLACK_CHANNEL=#media_server
      - WATCHTOWER_SCHEDULE=0 0 */12 * * *
      - WATCHTOWER_CLEANUP=true
    restart: unless-stopped
  # END Watchtower
  # START WIREGUARD
  wireguard:
    depends_on: [pihole]
    image: linuxserver/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Zurich # Change to your timezone
      - SERVERPORT=51820
      - SERVERURL=srv.ajil.ch #optional - For use with DDNS (Uncomment to use)
      - PEERS=muy,aadil,muyV2 # How many peers to generate for you (clients)
      - PEERDNS=10.2.0.100 # Set it to point to pihole
      - INTERNAL_SUBNET=10.6.0.0
    volumes:
      - ${VOLUMES_PATH}/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - "51820:51820/udp"
    dns:
      - 10.2.0.100 # Points to pihole
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1

    restart: unless-stopped
    networks:
      private-network:
        ipv4_address: 10.2.0.3
  # END WIREGUARD
  # START PIHOLE
  pihole:
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
    volumes:
      - "${VOLUMES_PATH}/pihole/etc-pihole/:/etc/pihole/"
      - "${VOLUMES_PATH}/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/"
    dns:
      - 127.0.0.1
      - 1.1.1.1
    environment:
      VIRTUAL_HOST: pihole.${TLD}
      LETSENCRYPT_HOST: pihole.${TLD}
      VIRTUAL_PORT: 80
      TZ: Europe/Zurich
      ServerIP: 10.2.0.100
      DNS1: 1.1.1.1
      DNS2: 1.1.1.1
      PIHOLE_UID: 0
    restart: unless-stopped
    networks:
      base-network:
      private-network:
        ipv4_address: 10.2.0.100
  # END PIHOLE
  # START PORTAINER
  portainer:
    image: portainer/portainer:latest
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '${VOLUMES_PATH}/portainer:/data'
    environment:
      VIRTUAL_HOST: portainer.${TLD}
      LETSENCRYPT_HOST: portainer.${TLD}
      VIRTUAL_PORT: 9000
    networks:
      - base-network
    restart: unless-stopped
  # END PORTAINER
  # START Public IP Monitor
  public-ip-monitor:
    image: muyajil/public-ip-slack-notifier:latest
    environment:
      SLACK_WEBHOOK: ${SLACK_WEBHOOK}
    restart: unless-stopped
  # END Public IP Monitor
  # START Plex version Monitor
  plex-version-monitor:
    image: muyajil/plex-version-slack-notifier:latest
    environment:
      SLACK_WEBHOOK: ${SLACK_WEBHOOK}
    restart: unless-stopped
  # END Plex version Monitor

networks:
  base-network:
    external: true
  private-network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24

volumes:
  netdatalib:
  netdatacache:
